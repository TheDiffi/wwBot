
TO DO!
This file seves the purpose to have a clear overlook on what things need to be done


Struktur:
    Main: beinhaltet MessageCreateEvent und inizialisiert "Game"

    Klasse Game: beinhaltet den GameState und eine liste der Player
        Klasse LobbyPhase : Commands der Lobby-Phase
        Klasse GamePhase : Ruft Tag und Nacht auf 
            (Klasse Tag:)
            (Klasse Nacht:)
        Klasse EndGamePhase

    Player: Username, Karte, TodesStatus,

    Karte: Kartenname, Wert, Einmaligkeit, 

Part 1. Grundstruktur - Lass Player Joinen & Stelle Deck Zusammen (Lobby-Phase)
        
    Starte ein neues Spiel:
    Inizialisiert neue Instanz von der Klasse "Game". Falls bereits ein Game mit serselben Variable existiert wirt diese Variable (nach bestätigung des Users) zerstört und neu inizialisiert
    User können nun dem Spiel Joinen und werden zu Player mit ihrem Username in listPlayer gespeichert
    Ein Player kann das Spiel wieder verlassen.
        
        TODO: gruppiere Commands nach LobbyPhase, GamePhase, EndGamePhase und lagere dies in funktion aus
        

    Verfügbaren Karten:
    Die verfügbaren Karten werden in einer .json Datei gespeichert mit den Parametern: Kartenname, Wert, Einmaligkeit, (z.b. Seher = true; Dorfbewohner = false).
    Diese Datei wird gelesen und jede Karte als Objekt gespeichert welches (Kartenname, Wert, Einmaligkeit) beinhaltet.
    Die Objekte werden in einer liste gespeichert um von addCard und Deckbuilder(algorithmus) aufgerufen werden zu können.
        TODO: implementiere JSONReader (aus discordLoungeBot)
        TODO: erstelle Objekt für verfügbare Karten mit den Parametern (Name des Objektes sollte Kartenname sein)
        TODO: erstelle eine Datei welche alle verfügbaren Karten beinhaltet und lade diese in eine Liste
        TODO: lade die Karten aus der Datei als Objekte in eine Liste (Name des Objektes sollte Kartenname sein)

    Deckbuilder:
    Der Deckbuilder sollte als einzelne Funktion aufrufbar sein, welche die anzahl der Player als parameter nimmt und eine Liste aus Karten Objekten zurückgibt 
    (listDeckbuilder)
        TODO: mache algorithmus lol

    CustomDeck:
    Das Custom Deck lässt Player selbst ein Deck erstellen, indem es den Player Karten hinzufügen und entfernen lässt.
    Diese Karten werden in listCustomDeck gespeichert als Karten Objekte gespeichert.
        TODO: erstelle addCard
        TODO: erstelle removeCard
        TODO: showCaddCard
        TODO: calculateCardValue

    DistribuiteCards:
    Nachdem der User sich zwischen dem CustomDeck oder dem Deckbuilder entschieden hat, müssen die Karten zufällig auf die Player verteilt werden
    Es wird in einem Objekt oder Liste der Player und das Karten Objekt gespeichert
    Anschließend werden alle Player über ihre Rolle privat informiert

    gamestart:
    Der AutoModerator übernimmt alle Player mit ihrer Karte und beginnt den Tag/Nacht Zyklus









Part 2. AutoModerator - Tag/Nacht Zyklus Bis Gameover
NIGHT:




DAY:


Part 3. Post-Game Infos?


Part 4. Music and Everything Else