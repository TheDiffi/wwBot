package wwBot.WerwolfGame;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import discord4j.core.event.domain.message.MessageCreateEvent;
import discord4j.core.object.entity.MessageChannel;
import discord4j.core.object.entity.PrivateChannel;
import discord4j.core.object.entity.TextChannel;
import wwBot.Globals;
import wwBot.Main;
import wwBot.WerwolfGame.cards.RoleZauberer;

public class MessagesWW {
	public static String prefix = Main.prefix;

	// ---------ONSTART MESSAGES--------------------------------------------

	// GAMESTART
	public static void newGameStartMessage(MessageChannel channel) {

		Globals.createEmbed(channel, Color.GREEN, "Created New Game!", "");
		Globals.createEmbed(channel, Color.GREEN, "",
				"Ihr befindet euch nun in der Lobby Phase. \nHier habt ihr Zeit f√ºr ein wenig Small-Talk w√§hrend alle Mitspieler mit **\""
						+ prefix
						+ "join\"** dem Spiel beitreten und das Kartendeck erstellt wird. Genie√üt diese Zeit denn sobald das Spiel mit **\""
						+ prefix
						+ "Start\"** gestartet wird, k√∂nnt ihr niemanden mehr trauen.... \nFalls dies das erste mal ist, dass du mich benutzt oder du nicht wei√üt was du tun sollst, tippe **\""
						+ prefix + "help\"**.");

	}

	public static void greetMod(Game game) {
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.GREEN, "Willkommen Moderator!", "");
		game.userModerator.getPrivateChannel().block().createMessage(
				"Deine Aufgabe ist es das Spiel f√ºr beide Parteien so fair wie m√∂glich zu machen! \nDu kannst diesen Textkanal f√ºr Notizen benutzen.\nDu kannst ebenfalls jederzeit hier n√ºtzliche Commands benutzen, welche unter **\""
				+ prefix
				+ "showModCommands\"** angef√ºhrt werden.\nDu kannst nun die erste Nacht Starten, indem du mir **\"Ready\"** schreibst.")
				.block();
	}

	public static void onGameStartSemi(Game game) {

		// verk√ºndet den Start der ersten Nacht
		Globals.createEmbed(game.mainChannel, Color.BLACK, "Willkommen bei : Die Werw√∂lfe von D√ºsterwald", "");

		Globals.createMessage(game.mainChannel,
				"Unser Dorf wird seit den Tagen des alten Rom von Mythen und Sagen √ºber Werw√∂lfe heimgesucht. Seit kurzem sind diese Mythen zur Wirklichkeit geworden.",
				false);
		Globals.createMessage(game.mainChannel,
				"Im Mondschein bestimmen die Dorfbewohner, dass man dieser Situation ein Ende gesetzt werden muss. ",
				false);
		Globals.createMessage(game.mainChannel,
				"Es wird angek√ºndigt das von nun an an jedem Morgen ein Dorfbewohner durch Abstimmung gelyncht wird. Somit beginnt die erste Nacht",
				false);

	}

	public static void onGameStartAuto(Game game) {
		var mssg = "";
		if (!game.gameRuleAutomaticMod) {
			mssg = "Euer Moderator ist: **" + game.userModerator.getUsername() + "!**";
		} else {
			mssg = "Es ist mir eine Ehre euer Moderator zu sein ‚ú®";
		}

		// verk√ºndet den Start der ersten Nacht
		Globals.createEmbed(game.mainChannel, Color.BLACK, "Willkommen bei : Die Werw√∂lfe von D√ºsterwald", mssg);

	}

	public static void wwChatGreeting(TextChannel wwChat) {
		Globals.createEmbed(wwChat, Color.decode("#5499C7"), "Willkommen im Werwolf-Chat",
				"Dies ist ein Ort in dem die Werw√∂lfe ungest√∂rt ihre Diskussionen durchf√ºhren k√∂nnen.");
	}

	public static void deathChatGreeting(TextChannel deathChat, Game game) {
		Globals.createEmbed(deathChat, Color.decode("#5499C7"), "Willkommen im Friedhof-Chat",
				"Dies ist ein Ort um ungest√∂rt √ºber das Spiel zu diskutieren.");

	}

	// FIRST NIGHT
	public static void onFirstNightAuto(Game game) {
		Globals.createEmbed(game.mainChannel, Color.decode("#191970"), "üåôDie Erste Nachtüåô",
				"In dieser Phase erwachen all jene Spezialkarten, welche Nachts eine Funktion erf√ºllen. Falls deine Karte eine dieser Spezialkarten ist wirst du von mir eine PrivatNachricht mit weiteren Infos erhalten. Alle Spieler welche √ºber Videochat verbunden sind sollten nachts ihre Webcam ausschalten um ihre Identit√§t zu bewahren");

	}

	public static void onFirstNightSemi(Game game, ArrayList<Player> listRolesToBeCalled) {
		// Nachricht an alle
		Globals.createEmbed(game.mainChannel, Color.decode("#191970"), "üåôDie Erste Nachtüåô",
				"```In dieser Phase erwachen all jene Spezialkarten, welche in der ersten Nacht eine Funktion erf√ºllen. Falls deine Karte eine dieser Spezialkarten ist, wird der Moderator den Namen deiner Rolle aufrufen. Um die Identit√§t dieser Personen zu wahren, sollten nun alle Spieler ihre Augen schlie√üen oder ihre Webcam deaktivieren.```\nTipp: ihr k√∂nnt mich jederzeit mit \"&showCard\" fragen euch eure Rolle zu Zeigen (tut dies im Privatchat mit mir, falls es geheim bleiben soll üòâ). ");
		// der Moderator bekommt eine Liste mit allen Spielern und ihren Rollen, sowie
		// eine Liste mit allen Rollen, welche aufgerufen werden m√ºssen

		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.decode("#191970"), "Erste Nacht",
				"In der ersten Nacht kannst du dir einen √úberblick √ºber die Rollen jedes Spielers verschaffen. In der ersten Nacht t√∂ten die Werw√∂lfe niemanden, der Seher darf allerdings eine Person √ºberpr√ºfen. Die Werw√∂lfe haben Nachts immer auf einen Werwolf-Chat zugriff. \n Es folgt eine Liste mit den Rollen welche in dieser Nacht aufgerufen werden sollten.");
		var mssg = "";
		for (Player player : listRolesToBeCalled) {
			mssg += player.name + ": ist " + player.role.name + "\n";
		}
		mssg += "Tipp: benutz &showCard <NameDerKarte> um dir die Details der Karte nochmals anzusehen";
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.decode("#191970"),
				"Diese Rollen m√ºssen in dieser Reihenfolge aufgerufen werden:", mssg);

	}

	// NIGHT
	public static void onNightSemi(Game game, ArrayList<Player> sortedRoles) {
		// Nachricht an alle
		Globals.createEmbed(game.mainChannel, Color.decode("#191970"), "Es wird NACHT...üåá",
				"In dieser Phase des Spieles erwachen Spezialkarten und die Werw√∂lfe einigen sich auf ein Opfer.");
		// Nachricht an Moderator
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.decode("#191970"), "Nacht",
				"```Nachts erwachen die Werw√∂lfe und einigen Sich auf ein Opfer. Dazu steht ihnen sein geheimer Text-Kanal auf dem Server zur verf√ºgung, auf den auch du Zugriff hast. \nEbenfalls erwachen in dieser Phase einige Spezialkarten.``` \nEs folgt eine Liste mit den Rollen und die von ihnen zu befolgende Reihenfolge.");
		var mssg = "```\n";
		for (int i = 0; i < sortedRoles.size(); i++) {
			mssg += Integer.toString(i) + ") " + sortedRoles.get(i).name + ": ist " + sortedRoles.get(i).role.name
					+ "\n";
		}
		mssg += "```\nTipp: benutz &showCard <NameDerKarte> um dir die Details der Karte nochmals anzusehen";
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.decode("#191970"),
				"Diese Rollen m√ºssen in dieser Reihenfolge aufgerufen werden:", mssg);
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.decode("#191970"),
				"Wichtig! T√∂te den Player erst im Morgengrauen!",
				"Beende zuerst die Nacht mit **\"&endNight\"**, und versichere dich, dass alle Spieler wach sind bevor du den Spieler t√∂test und somit auch die Identit√§t des Spielers preisgibst. Die Werw√∂lfe haben Nachts immer auf einen Werwolf-Chat zugriff.");
	}

	public static void onNightAuto(List<Player> pending, MessageChannel channel) {
		Globals.createEmbed(channel, Color.decode("#191970"), "Es wird NACHT... üåò", "");

	}

	public static void erwachenSpieler(MessageChannel mainChannel, List<Player> erwachen) {
		Globals.createEmbed(mainChannel, Color.LIGHT_GRAY, "", Globals.playerListToRoleList(erwachen, "Es erwachen"));

	}

	public static void onWWTurn(MessageChannel mainChannel, TextChannel wwChat) {
		Globals.createMessage(mainChannel,
				"```Die Nacht schreitet fort und als das ganze Dorf in einen pechschwarzen Schatten getaucht ist, kriechen die Werw√∂lfe aus ihrem Versteck... üåï```");
		Globals.createEmbed(mainChannel, Color.black, "DIE WERW√ñLFE SCHLAGEN ZU üíÄ", "");

		Globals.createEmbed(wwChat, Color.black, "DIE WERW√ñLFE SCHLAGEN ZU üíÄ",
				"Ihr k√∂nnt nun **&slay <Spieler>** benutzen um **EINEN** Spieler zu t√∂ten.");
	}

	public static void postWWTurn(MessageChannel mainChannel) {
		Globals.createMessage(mainChannel,
				"```Die Zeit verstreicht und der Gestank von Blut zieht durch die Gassen... üåí```");
	}

	// MORNING
	public static void onMorningAuto(Game game) {
		Globals.createEmbed(game.mainChannel, Color.decode("#cf9b2b"), "Der MORGEN Bricht An...üåÖ",
				"Die Dorfbewohner erwachen, froh es durch die Nacht geschafft zu haben. Wer wird heute von ihnen gegangen sein?");
	}

	public static void onMorningSemi(Game game) {
		Globals.createEmbed(game.mainChannel, Color.decode("#cf9b2b"), "Der MORGEN Bricht An...üåÖ",
				"Die Dorfbewohner erwachen und ihnen schwant √ºbles. Wer wird heute von ihnen gegangen sein?");
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.ORANGE, "MORGEN",
				"```In dieser Phase t√∂test du die Spieler welche in der vorherigen Nacht get√∂tet wurden.```\nBeende diese Phase mit \""
						+ prefix + "endMorning\" ");
	}

	// DAY
	public static void onDayAuto(Game game) {
		Globals.createEmbed(game.mainChannel, Color.YELLOW, "Es wird TAG...‚òÄÔ∏è",
				"Die Dorfbewohner versammeln sich auf dem Dorfplatz und setzen ihre Besprechungen fort. Nun werden alle dazu aufgefordert mit **\""
						+ prefix
						+ "vote <playername>\"** f√ºr eine Person zu Stimmen. \n(Falls der Name der Person ein Lehrzeichen beinhaltet, ist man gebeten dieses durch einen Bindestrich \"-\" zu ersetzen.) \nDie Person mit den meisten Stimmen wird am Ende des Tages gelyncht.");
	}

	public static void onDaySemi(Game game) {
		Globals.createEmbed(game.mainChannel, Color.YELLOW, "Es wird TAG...‚òÄÔ∏è",
				"Die Dorfbewohner versammeln sich auf dem Dorfplatz und setzen ihre Besprechungen fort. Nun werden alle dazu aufgefordert mit **\""
						+ prefix
						+ "vote <playername>\"** f√ºr eine Person zu Stimmen. Man kann auch f√ºr <nobody> w√§hlen. Die Person mit den meisten Stimmen wird am Ende des Tages gelyncht. ");
		Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.YELLOW, "TAG ‚òÄÔ∏è",
				"```In dieser Phase stimmen die Spieler ab. Der meistgew√§hlte Spieler wird dir mitgeteilt. Du kannst dir jederzeit mit \""
						+ prefix + "showVotes\" einen √úberblick verschaffen``` \nBeende diese Phase mit\"" + prefix
						+ "endDay\"");
	}

	// ---------UNIQUE CARDS MESSAGES--------------------------------------------

	// AMOR
	public static void triggerAmor(Game game, Player amor) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createMessage(game.userModerator.getPrivateChannel().block(),
					"[Optional] Du kannst mir mitteilen welche zwei Spieler verliebt sind. \nTue dies mit \"" + prefix
							+ "&inLove\" <Player1> <Player2>",
					false);
		} else {
			// TODO: rework design
			Globals.createMessage(amor.user.getPrivateChannel().block(),
					"*Teile mir nun mit, welche zwei Spieler du sich ineinander verlieben lassen m√∂chtest*üíï\nTue dies indem innerhalb einer Nachricht beide Namen nur durch ein Leerzeichen getrennt schreibst; etwa so:\nRomeo Julia");
		}
	}

	public static void amorSuccess(Game game, Player firstLover, Player secondLover) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.PINK, "ERFOLG!", ""
					+ firstLover.user.getUsername() + " und " + secondLover.name + " haben sich unsterblich verliebt");
		}

		Globals.createEmbed(game.mainChannel, Color.PINK, "Des Amors Liebespfeile haben ihr Ziel gefunden üíò!", "");

		Globals.createEmbed(firstLover.user.getPrivateChannel().block(), Color.PINK, "üíò", "Du f√§llst mit **"
				+ secondLover.name
				+ "** in eine unsterbliche Liebe. \n Eure Liebe ist do gro√ü, dass ihr euch kein Leben ohne einander vorstellen k√∂nnt und deshalb sterbt sobald euer Partner stirbt");

		Globals.createEmbed(secondLover.user.getPrivateChannel().block(), Color.PINK, "üíò", "Du triffst dich mit **"
				+ firstLover.name
				+ "** und verliebst dich Unsterblich in sie/ihn \nEure Liebe ist do gro√ü, dass ihr euch kein Leben ohne einander vorstellen k√∂nnt und deshalb sterbt sobald euer Partner stirbt");

	}

	// DOPPELG√ÑNGERIN
	public static void triggerDoppelg√§ngerin(Game game, Player dp) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createMessage(game.userModerator.getPrivateChannel().block(),
					"Teile mir mit f√ºr welchen Spieler die Doppelg√§ngerin sich entscheidet, damit ich (falls dieser Spieler stirbt) die Rolle der Doppelg√§ngerin √§ndern kann.\nTue dies mit \""
							+ prefix + "&Doppelg√§ngerin\" <Player-Chosen-By-The-Doppelg√§ngerin> ",
					false);
		} else {
			Globals.createMessage(dp.user.getPrivateChannel().block(),
					"Als Doppelg√§ngerin kannst du mir nun den Namen eines Spielers deiner Wahl mitteilen. \nFalls diese Person stirbt nimmst du die Rolle dieser Person an. \nSolltest du so zum Beispiel unabsichtlich einen Werwolf gew√§hlt haben und dieser stirbt, wirst du zum Werwolf und k√§mpfst anschlie√üend Seite an Seite mit den anderen Werw√∂lfen.\n\n~ __Schreibe nun einen Namen deiner Wahl, auf das sich eure Schicksale f√ºr immer verweben.__ ~");
		}
	}

	public static void doppelg√§ngerinSuccess(Game game, Player dp, Player chosenOne) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.GREEN, "ERFOLG!",
					dp.name + " hat sich an " + chosenOne.name + " gebunden.");
		}

		Globals.createEmbed(dp.user.getPrivateChannel().block(), Color.GREEN,
				"Du bist nun an " + chosenOne.name + " gebunden!", "");

	}

	public static void onDoppelg√§ngerinTransformation(Game game, Player doppelg√§ngerin, Player unluckyPlayer) {
		if (!game.gameRuleAutomaticMod) {
			// message to mod
			Globals.createMessage(game.userModerator.getPrivateChannel().block(),
					"Die Doppelg√§ngerin wurde zu einem/einer " + unluckyPlayer.role.name + "!");
		}

		// message to DP
		Globals.createEmbed(doppelg√§ngerin.user.getPrivateChannel().block(), Color.WHITE,
				"Du hast dich verwandelt!\nDeine neue Rolle ist: " + unluckyPlayer.role.name,
				"Die Person, welche du am Anfang des Spieles ausgew√§hlt hast, ist gestorben. Durch deine ungw√∂hnlichen F√§higkeiten hast du seine Identit√§t absorbiert. Du nimmst seine Rolle ein und wirst zu einem/einer "
						+ unluckyPlayer.role.name);

		Globals.printCard(unluckyPlayer.role.name, doppelg√§ngerin.user.getPrivateChannel().block());

		// message to all
		Globals.createEmbed(game.mainChannel, Color.decode("#9b1f74"), "",
				"Unbemerkt saugt die Doppelg√§ngerin die Identit√§t des Toten auf und verwandelt sich... ");
	}

	// G√úNSTLING
	public static void g√ºnstlingMessage(PrivateChannel privateChannel, Map<String, List<Player>> mapExistingRoles,
			Game game) {
		var tempList = new ArrayList<Player>();

		for (int i = 0; i < mapExistingRoles.get("Werwolf").size(); i++) {
			tempList.add(mapExistingRoles.get("Werwolf").get(i));
		}

		if (mapExistingRoles.containsKey("Wolfsjunges")) {
			tempList.add(mapExistingRoles.get("Wolfsjunges").get(0));
		}

		Globals.createEmbed(privateChannel, Color.RED, "",
				Globals.playerListToList(tempList, "Die Werw√∂lfe sind:", false));

	}

	// M√ÑRTYRERIN
	public static void remindAboutM√§rtyrerin(Game game) {
		Globals.createMessage(game.userModerator.getPrivateChannel().block(),
				"Vergiss nicht die M√§rtyrerin zu fragen ob sie sich anstelle der nominierten Person lynchen lassen will.");

	}

	public static void remindM√§rtyrerin(Game game, Player player, Player mostVoted) {

		Globals.createMessage(player.user.getPrivateChannel().block(), "Auf dem Schafott steht: **" + mostVoted.name
				+ "!** Nun liegt es an dir...\nWenn du dich anstelle des Spielers opfern willst, tippe **ja** und ansonsten **nein**.");
		Globals.createMessage(game.mainChannel, "Waiting for the \"M√§rtyrerin\" to act...");

	}

	// PRINZ
	public static void remindAboutPrinz(Game game) {
		Globals.createMessage(game.userModerator.getPrivateChannel().block(),
				"Wenn der Prinz duch \"" + prefix + "lynch\" stirbt, zeigt er seine Identit√§t und √ºberlebt.");
	}

	public static void prinzSurvives(Game game) {
		Globals.printCard("Prinz", game.mainChannel);
		game.mainChannel.createMessage(
				"Im letzten Moment enth√ºllt der Prinz Seine Identit√§t. Geblendet von seiner Pr√§senz (und seinen wei√üen Z√§hnen) verschwindet die Wut der Dorfbewohner und der Prinz √ºberlebt.")
				.block();
	}

	// HARTER BURSCHE
	public static void checkHarterBurscheDeath(MessageChannel modChannel) {
		Globals.createMessage(modChannel,
				"Du bist kurz davor den Harten Burschen zu t√∂ten. Dieser √ºberlebt bis zum Abend, wenn er Nachts get√∂tet wird. Wenn du dir sicher bist, dass jetzt der richtige moment ist den Harten Burschen zu t√∂ten, tippe \"confirm\". Andernfalls tippe \"cancel\"");
		Globals.printCard("Harter-Bursche", modChannel);
	}

	public static void harterBurscheSurvives(Game game) {
		Globals.createEmbed(game.mainChannel, Color.decode("#5b3a29"), "",
				"Als die Dorfbewohner morgens das Haus verlassen finden sie zu ihrem Entsetzen auf dem Dorfplatz den **Harten Burschen** schwer verwundet am Boden liegen. Dank seiner kr√§ftigen Statur ist der Bursche noch nicht an seinen Wunden erlegen doch es ist klar, dass ihm nichht mehr viel Zeit bleibt... ");
	}

	// ALTE VETTEL
	public static void callVettel(Player vettel) {
		Globals.createMessage(vettel.user.getPrivateChannel().block(),
				"Schreibe mir den Namen des Spielers den du f√ºr den n√§chsten Tag verbannen m√∂chtest.");
	}

	// SEHER
	public static void callSeher(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nenne mir den Namen eines Spielers √ºber den du mehr herausfinden m√∂chtest.");
	}

	// a mightySeher is able to see the exact role of the player, a normal one only
	// if the player is friendly or not
	public static void showSeher(Player seher, Player found, Game game, boolean mightySeher) {
		var color = found.role.specs.friendly ? Color.GREEN : Color.RED;
		var name = found.role.name;
		var channel = seher.user.getPrivateChannel().block();
		var friendly = found.role.specs.friendly ? "Dieser Spieler ist auf der Seite der DORFBEWOHNER"
				: "Dieser Spieler ist auf der Seite der WERW√ñLFE";

		// Lykantrothin
		if (name.equalsIgnoreCase("Lykantrophin")) {
			color = Color.RED;
			name = "Werwolf";
			friendly = "Dieser Spieler ist auf der Seite der WERW√ñLFE";
		}

		if (mightySeher) {
			Globals.createEmbed(channel, color, "", found.name + " ist: " + found.role.name);

		} else {
			Globals.createEmbed(channel, color, "", friendly);
		}
	}

	// Aura-Seherin
	public static void callAuraSeherin(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nenne mir den Namen eines Spielers √ºber den du mehr herausfinden m√∂chtest.");
	}

	public static void showAuraSeherin(Player seher, Player found) {
		var color = found.role.specs.unique ? Color.GREEN : Color.WHITE;
		var revelation = found.role.specs.unique ? " ist eine" : " ist keine";

		Globals.createEmbed(seher.user.getPrivateChannel().block(), color, found.name + revelation + " Spezial Rolle",
				"");

	}

	// LEIBW√ÑCHTER
	public static void callLeibw√§chter(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nenne mir den Namen des Spielers den du diese Nacht besch√ºtzen m√∂chtest.");
	}

	// S√ÑUFER
	public static void callS√§ufer(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nenne mir den Namen des Spielers bei dem du die AfterParty starten l√§sst.");
	}

	// UNRUHESTIFTERIN
	public static void callUnruhestifterin(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"M√∂chtest du diese Nacht deine F√§higkeit einsetzen? Du kannst mir mit  **ja**   bzw.   **nein**   antworten.");
	}

	public static void announceUnruhe(Game game) {
		Globals.createEmbed(game.mainChannel, Color.GRAY, "Zweite Abstimmung",
				"Ein Ger√ºcht hier, eine Anschuldigung da; die Unruhestifterin wei√ü wie sie Angst s√§hen muss damit sie fruchtet.\nAufgebracht beschlie√üen die Bewohner, dass heute **zwei** Personen ihr Leben lassen m√ºssen.");

	}

	public static void secondVote(Game game) {
		Globals.createEmbed(game.mainChannel, Color.GRAY, "Zweite Abstimmung",
				"Die Dorfbewohner beschlie√üen voller Rage, dass noch eine Person heute sterben muss!");
	}

	// PRIESTER
	public static void callPriester(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"M√∂chtest du diese Nacht deine F√§higkeit einsetzen? Du kannst mir mit  **ja**   bzw.   **nein**   antworten.");
	}

	public static void confirmPriester(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Dann wollen wir mal! Nenne mir nun den Namen des Spielers den du durch die Macht Gottes besch√ºtzt haben m√∂chtest.");
	}

	public static void savedByPriester(Player victim, Game game) {
		Globals.createEmbed(game.mainChannel, Color.decode("#FFD700"), "",
				"Engelsgesang erf√ºllt die Luft, so wundersch√∂n als w√§re es nicht f√ºr sterbliche Ohren bestimmt. So pl√∂tzlich wie der Gesang kam verschwindet er schlie√ülich wieder und der Priester kniet betend zu Boden und dankt der bevorzugten Gottheit der Spieler, das Leben seines Sch√ºtzlings gerettet zu haben.\n(TLDR: der Schutz des Priesters wurde ausgel√∂st.) ");
	}

	// ZAUBERMEISTERIN
	public static void callZaubermeisterin(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nenne mir den Namen des Spielers √ºber den du mehr herausfinden m√∂chtest.");
	}

	public static void showZaubermeisterin(Player zaubermeisterin, Player found) {
		if (found.role.name.equals("Seherin")) {
			Globals.createEmbed(zaubermeisterin.user.getPrivateChannel().block(), Color.GREEN,
					found.name + " ist die Seherin!", "");
		} else {
			Globals.createMessage(zaubermeisterin.user.getPrivateChannel().block(),
					"**" + found.name + "** ist **nicht** die Seherin.");
		}
	}

	// PARANOMALER ERMITTLER
	public static void callErmittler(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"M√∂chtest du diese Nacht deine F√§higkeit einsetzen? Du kannst mir mit  **ja**   bzw.   **nein**   antworten.");

	}

	public static void confirmErmittler(Player player) {
		Globals.createMessage(player.user.getPrivateChannel().block(),
				"Nun gut. Dann schreibe mir jetzt die Namen der drei Personen, die du mit deinen au√üergew√∂hnlichen (man k√∂nnte auch sagen: paranormalen) Detektivf√§higkeiten genauer unter die Lupe nehmen m√∂chtest.\nTipp: deine Nachricht sollte so aussehen **<Player1> <Player2> <Player3>**");
	}

	public static void ermittlerSuccess(Game game, List<Player> tempList, Player ermittler) {
		var color = !tempList.get(1).role.specs.friendly || !tempList.get(0).role.specs.friendly ? Color.RED
				: Color.GREEN;

		var mssg1 = tempList.get(0).role.specs.friendly ? tempList.get(0).name + " ist auf der Seite der DORFBEWOHNER"
				: tempList.get(0).name + " ist auf der Seite der WERW√ñLFE";
		var mssg2 = tempList.get(1).role.specs.friendly ? tempList.get(1).name + " ist auf der Seite der DORFBEWOHNER"
				: tempList.get(1).name + " ist auf der Seite der WERW√ñLFE";

		Globals.createEmbed(ermittler.user.getPrivateChannel().block(), color, "Erfolg",
				"Als Folge deiner Ermittlung erf√§hrst du folgendes:\n" + mssg1 + "\n" + mssg2);
	}

	// Zauberer (Hexe / Magier)
	public static void callZauberer(Player playerZauberer, RoleZauberer roleZauberer, List<Player> atRiskPlayers,
			Game game) {
		var message = "";

		if (!roleZauberer.healUsed) {
			Globals.createEmbed(playerZauberer.user.getPrivateChannel().block(), Color.RED, "In Todesgefahr",
					Globals.playerListToList(atRiskPlayers, "AT RISK", false));
			message += "\nbenutze: **&heal <Player>** um einen Spieler der obigen Liste vor dem sicheren Tod zu bewahren.\n";
		}
		if (!roleZauberer.poisonUsed) {
			message += "benutze: **&poison <Player>** um einen Spieler deiner Wahl zu t√∂ten.\n";
		}

		message += "benutze: **&continue** um deinen Zug zu beenden und fortzufahren";

		Globals.createMessage(playerZauberer.user.getPrivateChannel().block(), message);

	}

	public static void callZaubererUsedEverything(PrivateChannel privateChannel) {
		privateChannel.createMessage("Looks like you already used all your Potions");
	}

	// ---------DEATH MESSAGES--------------------------------------------

	public static String revealId(Player player, Game game) {
		var mssg = player.name + " war **" + player.role.name + "**";
		return mssg;
	}

	public static void deathByWW(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED, player.name + " wird am Morgen halb zerfressen aufgefunden. ",
				revealId(player, game));
	}

	public static void deathByMagic(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED,
				player.name + "wird Tod neben einer leeren Trankflasche aufgefunden. ", revealId(player, game));
	}

	public static void deathByGunshot(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED,
				player.name + " wurde von einem Schuss im Bein getroffen und verblutete daraufhin. ",
				revealId(player, game));
	}

	public static void deathByLynchen(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED, player.name + " wird √∂ffentlich hingerichtet! ",
				revealId(player, game));
	}

	public static void onLoversDeath(Game game, Player inLoveWith) {
		Globals.createMessage(game.mainChannel, inLoveWith.name
				+ " sieht den Leblosen K√∂rper seiner wahren Liebe zu Boden sinken und in ihrer Seele zerbricht etwas...");
	}

	public static void deathByLove(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.PINK, player.name

				+ " ertr√§gt die Welt ohne seiner/ihrer Geliebte/n nicht mehr und erh√§ngt sich. ",
				revealId(player, game));
	}

	public static void deathByMartyrium(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED,
				player.name + " wirft sich freiwillig von der Br√ºcke um ein Zeichen zu setzen. ",
				revealId(player, game));
	}

	public static void deathByDefault(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED,
				"Das Leben von " + player.name + " kam zu einem tragischen Ende. ", revealId(player, game));
	}

	public static void deathBySacrifice(Game game, Player player) {
		Globals.createEmbed(game.mainChannel, Color.RED,
				"Mutig und voller Entschlossenheit tritt die M√§etyrerin aufs Schafott. Alle Stimmen verstumme als sie mit einer kleinen Tr√§ne im Auge nicht vor der Henkersaxt zur√ºck zuckt.",
				revealId(player, game));
	}

	public static void onAuss√§tzigeDeath(Game game) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createMessage(game.userModerator.getPrivateChannel().block(),
					"Die Auss√§tzige ist gestorben! Vergiss nicht, in der n√§chsten Nacht d√ºrfen die Werw√∂lfe niemanden t√∂ten");
		}

		Globals.createMessage(game.mainChannel,
				"Die Werw√∂lfe wurden infiziert und d√ºrfen in der n√§chsten Nacht niemanden t√∂ten", true);

	}

	public static void onSeherlehrlingPromotion(Game game, Player player) {
		Globals.createMessage(game.mainChannel, "Best√ºrzt √ºber den Tod seines Meisters, beschlie√üt der "
				+ player.role.name
				+ " die Sache selbst in die Hand zu nehmen. Fortan tritt er in die Fu√üstapfen seines Meisters und such jede Nacht nach den Werw√∂lfen.",
				true);

	}

	public static void verfluchtenMutation(Game game) {
		Globals.createMessage(game.mainChannel,
				"Die Dorfbewohner finden zerfetzte Kleider im Wald und wissen, dass dies nur eines bedeuten kann: der Verfluchte ist mutiert!",
				true);
	}

	public static void onWolfsjungesDeath(Game game) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createMessage(game.userModerator.getPrivateChannel().block(),
					"Das Wolfsjunges ist gestorben! Vergiss nicht, in der n√§chsten Nacht d√ºrfen die Werw√∂lfe zwei Personen t√∂ten.",
					false);
		}
		Globals.createEmbed(game.mainChannel, Color.red, "",
				"Die Werw√∂lfmutter ist √ºber ihren Verlust entsetzt und die Werw√∂lfe beschlie√üen, dass es in der n√§chsten Nacht 2 Tode geben wird.");

	}

	public static void wwEnraged(TextChannel wwChat) {
		Globals.createMessage(wwChat,
				"Da am Tag das Wolfsjunges get√∂tet wurde, k√∂nnt ihr nun einen weiteren Spieler t√∂ten.");
	}

	public static void onJ√§gerDeath(Game game, Player player) {
		Globals.createMessage(game.mainChannel,
				"Mit letzter Kraft z√ºckt der J√§ger sein Gewehr. Schreibe mir nun wen du t√∂ten m√∂chtest.", false);
		Globals.createEmbed(player.user.getPrivateChannel().block(), Color.RED, "Du bist gefallen",
				"Als J√§ger kannst du nun noch einen Schuss aus deinem Gewehr abgeben bevor du stirbst.\nSchreibe mir nun den Namen der Person die du t√∂ten m√∂chtest!");
	}

	public static void s√§uferSurvives(Game game, Player player) {
		Globals.createMessage(game.mainChannel, "TODO: fill s√§uferSurvives", false);
	}

	// ---------VOTE MESSAGES--------------------------------------------

	public static void announceMajority(Game game, Player mostVoted, Map<Player, Player> mapVotes) {
		if (!game.gameRuleAutomaticMod) {
			Globals.createEmbed(game.userModerator.getPrivateChannel().block(), Color.RED,
					"Alle Spieler Haben Gew√§hlt!",
					"Auf dem Schafott steht **" + mostVoted.user.getMention() + "** der ein/eine **"
							+ mostVoted.role.name
							+ "** ist.\nMit \"**&lynch <Player>\"** kannst du einen Spieler lynchen und damit die Rolle des Spielers offenbaren. \nFalls du niemanden Lynchen m√∂chtest kannst du auch gleich mit &endDay fortfahren");
		}
		var mssg = "";
		for (var entry : mapVotes.entrySet()) {
			mssg += entry.getKey().name + " hat f√ºr " + entry.getValue().name + " abgestimmt \n";
		}

		Globals.createEmbed(game.mainChannel, Color.WHITE,
				"Die W√ºrfel sind gefallen \nAuf dem Schafott steht: " + mostVoted.name, mssg);
	}

	public static void voteResultNoMajority(Game game) {
		Globals.createMessage(game.mainChannel,
				"Alle Spieler haben abgestimmt, jedoch gibt es **keine klare Mehrheit**. Es wird gebete, dass wenigstens ein Spieler seine Stimme √§ndert, damit es zu einer klaren Mehrheit kommt.",
				false);
	}

	public static void votePlayer(Game game, Player voter, Player votedFor) {
		Globals.createMessage(game.mainChannel, voter.user.getMention() + " w√§hlte f√ºr " + votedFor.user.getMention());
	}

	public static void voteNobody(Game game, Player voter) {
		Globals.createMessage(game.mainChannel, voter.user.getMention() + " will niemanden lynchen.");

	}

	// ---------HELP MESSAGES--------------------------------------------

	public static String buildDescription(String command, String description) {
		return "\n" + "`" + prefix + command + ":` " + description;
	}

	public static String getHelpInfo() {
		var mssg = "\n\n ------ Help ------";
		mssg += buildDescription("help", "Gibt dir Rat je nach deiner aktuellen Lage");
		mssg += buildDescription("showCommands", "Listet alle dir zurzeit verf√ºgbaren Befehle auf");
		mssg += "\n**Vergiss nicht:** Zusammen mit dem Spiel √§ndert sich auch, welche Commands du benutzen kannst! Frag jederzeit mit den zwei obigen Commands nach Hilfe wenn du nicht weiter wei√üt üôÇ";
		return mssg;
	}

	public static void sendHelpMain(MessageChannel channel) {
		Globals.createEmbed(channel, Color.BLACK, "", "Schreibe **" + prefix
				+ "newGame** zm ein neues Spiel zu starten! \n(Je Server kann nur ein Spiel gleichzeitig laufen) \nFalls du weitere Fragen hast kannst du jederzeit **"
				+ prefix
				+ "showCommands** eingeben um dir eine Liste der zurzeit verf√ºgbaren Befehle anzeigen zu lassen oder erneut mit **"
				+ prefix + "help** nach hilfe fragen üòÅ");
	}

	public static void sendHelpLobby(MessageChannel channel) {
		// help
		Globals.createEmbed(channel, Color.BLACK, "____ Lobby Phase ____  ",
				" - Ihr k√∂nnt dem Dorf beitreten indem ihr **" + prefix
						+ "join** eingebt. \n - Sobald alle Mitspieler beigetreten sind, wollt ihr als n√§chstes euer Kartendeck f√ºr dieses Spiel bestimmen.\nMit **"
						+ prefix
						+ "buildDeck** generiert mein algorithmus automatisch ein faires Deck. \n Dieses kann anschlie√üend mit **"
						+ prefix + "addCard <Karte>** und **" + prefix
						+ "removeCard <Karte>** bearbeitet werden. \n - Mit **" + prefix + "gamerule manual** und **"
						+ prefix
						+ "gamerule automatic** k√∂nnt ihr den Moderationsmodus des Spiels bestimmen. Bei \"Manual\" moderiert ein menschlicher Spieler den Spielverlauf und ich helfe ihm eine √úbersicht zu behalten. Im \"Automatic\" Moderationsmodus nehme ich die Rolle des Moderators ein (Still in test phase)\n - Wenn alle Spieler beigetreten und ein Deck registriert wurde, lasse das Spiel mit **"
						+ prefix + "start** starten!*" + getHelpInfo());
	}

	public static void sendHelpFirstNight(MessageChannel channel, boolean auto) {
		if (auto) {
			Globals.createEmbed(channel, Color.BLACK, "____ Erste Nacht ____  ",
					"In dieser Phase rufe ich bestimmte Spezialkarten mit speziellen Funktionen zu Beginn des Spiels, wie z.B. Amor, auf. \nF√ºr die Werw√∂lfe √∂ffnet sich, wie in jeder Nacht, ein Chatroom im Server, allerdings d√ºrfen sie in der ersten Nacht noch niemanden t√∂ten. √úberpr√ºft ob ihr eine private Nachricht von mir erhalten habt. Falls ja, befinden sich dort genauere Informationen. Sobald alle aufgerufenen Spieler gehandelt haben, beginnt der erste Tag!");
		} else {
			Globals.createEmbed(channel, Color.BLACK, "____ Erste Nacht ____  ",
					"In dieser Phase werden vom Moderator Spezialkarten mit bestimmten Funktionen zu Beginn des Spiels, wie z.B. Amor, aufgerufen. F√ºr die Werw√∂lfe √∂ffnet sich wie in jeder Nacht ein Chatroom im Server, allerdings d√ºrfen sie noch niemanden t√∂ten. √úberpr√ºft ob ihr eine private Nachricht von mir erhalten habt. Falls ja, befinden sich dort genauere Informationen.");
		}

	}

	public static void sendHelpNight(MessageChannel channel, boolean auto) {
		if (auto) {
			Globals.createEmbed(channel, Color.BLACK, "____ Nacht ____  ",
					"In dieser Phase erwachen all jene Spezialkarten, welche Nachts eine Funktion erf√ºllen. Falls deine Karte eine dieser Spezialkarten ist wirst du von mir eine PrivatNachricht mit weiteren Infos erhalten. \nAlle Spieler welche √ºber Videochat verbunden sind sollten nachts ihre Webcam ausschalten um ihre Identit√§t zu bewahren.\n F√ºr die Werw√∂lfe √∂ffnet sich, wie in jeder Nacht, ein Chatroom im Server, wo sie ungest√∂rt diskutieren k√∂nnen. Sobald alle aufgerufenen Spieler gehandelt haben, beginnt der n√§chste Tag!\nTipp: benutze **&pending** un zu erfahren welche Spieler noch handeln m√ºssen.");
		} else {
			Globals.createEmbed(channel, Color.BLACK, "____ Nacht ____  ",
					"In dieser Phase werden Spezialkarten vom Moderator in bestimmter Reihenfolge aufgerufen. F√ºr die Werw√∂lfe √∂ffnet sich wie in jeder Nacht ein Chatroom im Server, wo sie ungest√∂rt diskutieren k√∂nnen.");
		}

	}

	public static void sendHelpMorning(MessageChannel channel, boolean auto) {
		if (auto) {
			Globals.createEmbed(channel, Color.BLACK, "____ Morgen ____  ",
					"Am Morgen werden die Opfer der Nacht verk√ºndet. Ebenfalls finde spezielle Interaktionen, wie z.B. der Tod des J√§gers, hier statt. Sobald alle Opfer verk√ºndet wurden, beginnt der Tag und die Abstimmung beginnt.");
		} else {
			Globals.createEmbed(channel, Color.BLACK, "____ Morgen ____  ",
					"Am Morgen verk√ºndet der Moderator die Opfer der Nacht (und spezielle Interaktionen wie J√§ger finden statt)");
		}
	}

	public static void sendHelpDay(MessageChannel channel, boolean auto) {
		if (auto) {
			Globals.createEmbed(channel, Color.BLACK, "____ Tag ____  ",
					"Es ist zurzeit Tag. In dieser Phase versuchen die Dorfbewohner durch Diskussion herauszufinden, wer die Werw√∂lfe sind. Die Werw√∂lfe hingegen versuchen nicht aufzufallen. Jeder Spieler kann jeden Tag mit \""
							+ prefix
							+ "vote <Name des Spielers> \" f√ºr den Tod eines Mitspielers stimmen. Die Stimme kann hierbei jederzeit durch das erneute Aufrufen des Commands ge√§ndert werden.\nSobald alle noch lebenden Spieler abgestimmt haben und eine Mehrheit besteht, wird dieser √∂ffentlich hingerichtet und die Bewohner schlafen wieder ein.");
		} else {
			Globals.createEmbed(channel, Color.BLACK, "____ Tag ____  ",
					"Es ist zurzeit Tag. In dieser Phase versuchen die Dorfbewohner durch Diskussion herauszufinden, wer die Werw√∂lfe sind. Die Werw√∂lfe hingegen versuchen nicht aufzufallen. Jeder Spieler kann jeden Tag mit \""
							+ prefix
							+ "vote <Name des Spielers> \" f√ºr den Tod eines Mitspielers stimmen. Die Stimme kann hierbei jederzeit durch das erneute Aufrufen des Commands ge√§ndert werden.\nSobald alle noch lebenden Spieler abgestimmt haben und eine Mehrheit besteht, kann der Moderator diesen lynchen. Mit \""
							+ prefix + "endDay\" kann der Moderator das Spiel beenden.");
		}
	}

	// Syntax: mssg += "\n" + "`" + prefix + "<Command>" + "`" + "<Description>"
	public static String getCommandsMain() {
		String mssg = " ---- Bot ---- ";
		mssg += buildDescription("newGame", "Startet ein neues Spiel");
		mssg += buildDescription("deleteGame", "Falls aus diesem Server zurzeit ein Spiel l√§uft, wird es beendet");
		mssg += buildDescription("explanation", "Falls du nach einer Erkl√§rung suchst, was \"Werw√∂lfe\" √ºberhaupt ist");

		return mssg;
	}

	public static String getCommandsGame() {
		var mssg = "\n ---- Utility ----";
		mssg += buildDescription("showCard <Cardname>", "Zeigt die Details einer Karte");
		mssg += buildDescription("allCards", "Listet ALLE Spielkarten auf");
		mssg += buildDescription("manual", "Zeigt die Spielanleitung");
		mssg += buildDescription("showDeck", "Zeigt das aktuelle Kartendeck");

		return mssg;
	}

	public static String getCommandsLobby() {
		var mssg = "\n ---- Lobby ----";
		mssg += buildDescription("join", "Tritt dem Spiel bei");
		mssg += buildDescription("leave", "Verlasse ein beigetretenes Spiel");
		mssg += buildDescription("makeMeMod", "Werde zum Moderator");
		mssg += buildDescription("gamerule automatic", "Aktiviert den automatischen Moderator");
		mssg += buildDescription("gamerule manual", "Aktiviert den semiautomatischen Moderator");
		mssg += buildDescription("joinedPlayers", "Listet alle beigetretenen Spieler auf");
		mssg += buildDescription("buildDeck", "Kreiert ein ausgewogenes Kartendeck");
		mssg += buildDescription("addCard <Karte>", "F√ºgt eine Karte dem Deck hinzu");
		mssg += buildDescription("removeCard <Karte>", "Entfernt eine Karte aus dem Deck");
		mssg += buildDescription("clearDeck", "Entfernt alle Karten aus dem Deck");
		mssg += buildDescription("start", "Startet das Spiel");

		return mssg;
	}

	public static String getCommandsPostGame() {
		var mssg = " ---- PostGame ----";
		mssg += buildDescription("randomStat", "COMING SOMETIME MBY");

		return mssg;
	}

	public static String getCommandsSemiState() {
		var mssg = "\n ---- Day ----";
		mssg += buildDescription("vote <Player>", "Stimmt f√ºr die √∂ffentliche Hinrichtung dieses Spielers");
		mssg += buildDescription("listVotes", "Listet alle Stimmen auf");

		return mssg;
	}

	public static String getCommandsAutoState() {
		var mssg = "\n ---- Day ----";
		mssg += buildDescription("vote <Player>", "Stimmt f√ºr die √∂ffentliche Hinrichtung dieses Spielers");
		mssg += buildDescription("listVotes", "Listet alle Stimmen auf");

		mssg += "\n ---- Night ----";
		mssg += buildDescription("listPending", "Listet alle Rollen welche in dieser Nacht noch handeln m√ºssen");
		mssg += buildDescription("listLiving", "Listet alle lebenden Spieler auf");

		return mssg;
	}

	// -------------------------------------------------------------

	public static void sendHelpFirstNightMod(MessageChannel channel) {

		Globals.createEmbed(channel, Color.BLACK, "____ Erste Nacht ____  ",
				"Die erste Nacht ist dazu da, dass du dir einen kurzen √úberblick √ºber das Spiel verschaffen kannst. Zudem rufst du Rollen wie z.B. den Amor auf, welche zu Beginn des Spiels in Aktion treten. Obig findest du eine Liste die dir sagt, welche Personen du in welcher Reihenfolge aufrufen solltest. Mit \"&endNight\" kannst du diese Phase beenden, tue dies aber erst, sobald du alle Spieler auf der Liste kontaktiert hast! "
						+ getHelpInfo());
	}

	public static void sendHelpNightMod(MessageChannel channel) {
		Globals.createEmbed(channel, Color.BLACK, "____ Nacht ____  ",
				"Zu Beginn jeder Nacht erh√§ltst du eine Liste mit den Rollen welche in dieser Nacht aktiv werden. Jede Rolle verh√§lt sich anders, was du mit **&showCard <Kartenname>** nachschlagen kannst. Im Server existiert ein geheimer Chat auf den nur die Werw√∂lfe und du als Moderator Zugriff haben. Nachdem jede Rolle agiert hat und die W√∂lfe ihr Ziel dir mitgeteilt haben, beende die Nacht mit **&endNight**. \nWICHTIG: T√∂te die Opfer dieser Nacht erst nachdem du die Nacht beendet hast und der Morgen graut!"
						+ getHelpInfo());
	}

	public static void sendHelpDayMod(MessageChannel channel) {
		Globals.createEmbed(channel, Color.BLACK, "____ Tag ____  ",
				"Am Tag stimmen die Spieler f√ºr das n√§chste √∂ffentliche Opfer. Wenn alle Spieler abgestimmt haben und eine Mehrheit besteht, bekommst du eine Nachricht von mit, welche dir r√§t, diesen Spieler mit **&lynch <Opfer>** zu t√∂ten. Du kannst allerdings jeden Spieler deiner Wahl hinrichten (falls du dies tun willst). Beende diese Phase mit **&endDay**."
						+ getHelpInfo());
	}

	public static void sendHelpMorningMod(MessageChannel channel) {
		Globals.createEmbed(channel, Color.BLACK, "____ Morgen ____  ",
				"In dieser Phase t√∂test du die Opfer der Nacht mit **&kill <Opfer> (Optional)<RolleDieT√∂tete>** die Opfer der Nacht und ich verk√ºnde automatisch deren Rolle. Beende diese Phase mit **&endMorning**. Ich √ºberpr√ºfe dann, ob das Spiel von einer Partei gewonnen wurde. "
						+ getHelpInfo());
	}

	public static String getModCommands() {
		var mssg = " ---- Game ----";
		mssg += buildDescription("kill <Player> <Role>",
				"T√∂tet diesen Spieler, optional kann auch die Todesursache in Form einer Rolle angegeben werden");
		mssg += buildDescription("listPlayers", "Listet alle Spieler und deren Rollen auf");
		mssg += buildDescription("listLiving", "Listet alle noch lebenden Spieler auf");
		mssg += buildDescription("mute <Player>", "Schaltet diesen Spieler stumm");
		mssg += buildDescription("unMute <Player>", "Hebt eine Stummschaltung wieder auf");
		mssg += buildDescription("muteAll", "Schaltet alle Spieler Stumm");
		mssg += buildDescription("listVotes", "Hebt die Stummschaltung aller Spieler auf");
		

		mssg += "\n" + MessagesWW.getModCommandsFirstNight();
		mssg += "\n" + MessagesWW.getModCommandsNight();
		mssg += "\n" + MessagesWW.getModCommandsMorning();
		mssg += "\n" + MessagesWW.getModCommandsDay();

		return mssg;
	}

	public static String getModCommandsFirstNight() {
		var mssg = " ---- First Night ----";
		mssg += buildDescription("Amor <Player1> <Player2>", "[Optional] Du kannst mir mitteilen welche zwei Spieler verliebt sind.");
		mssg += buildDescription("Doppelg√§ngerin <Player-Chosen-By-The-Doppelg√§ngerin>", "Bindet die Doppelg√§ngerin an diese Person (!WICHTIG!)");
		mssg += buildDescription("endNight ", "Beendet die erste Nacht");

		return mssg;
	}

	public static String getModCommandsNight() {
		var mssg = " ---- Night ----";
		mssg += buildDescription("endNight", "Beendet die Nacht");
		return mssg;
	}

	public static String getModCommandsMorning() {
		var mssg = " ---- Morning ----";
		mssg += buildDescription("endMorning", "Beendet die MorgenPhase");
		return mssg;
	}

	public static String getModCommandsDay() {
		var mssg = " ---- Day ----";
		mssg += buildDescription("endNight", "Beendet den Tag");
		mssg += buildDescription("lynch <Player>", "Richtet diesen Spieler √∂ffentlich hin");

		return mssg;
	}

	public static void sendGameExplanation(MessageChannel channel) {
		Globals.createEmbed(channel, Color.BLUE, "Was ist \"WERW√ñLFE\"",
				"Werw√∂lfe ist ein interaktives Deduktionsspiel f√ºr zwei Teams: die Dorfbewohner und die Werw√∂lfe. W√§hrend die Dorfbewohner nicht wissen, wer die Werw√∂lfe sind, versuchen diese, unentdeckt zu bleiben und einen Dorfbewohner nach dem anderen auszuschalten. Ein Moderator ‚Äûleitet‚Äú das Spiel (es kann einer der Spieler sein), und erleichtert so den Ablauf von Werw√∂lfe. (Alternativ kann ich diese Rolle √ºbernehmen). Eine Partie Werw√∂lfe verl√§uft √ºber eine Reihe von ‚ÄûTagen‚Äú und ‚ÄûN√§chten‚Äú. Jede Nacht w√§hlen die Werw√∂lfe ein Opfer, w√§hrend die einsame Seherin Informationen √ºber einen anderen Spieler sammelt und so lernt, ob dieser ein Werwolf ist. W√§hrend des Tages versuchen die Spieler gemeinsam herauszufinden, wer von ihnen ein Werwolf ist, um ihn dann nach einer Abstimmung zu lynchen. Das Spiel gewinnt immer eine Gruppe ‚Äì entweder die Dorf¬≠ bewohner, wenn sie alle Werw√∂lfe gelyncht haben, oder die Werw√∂lfe, wenn sie einen Gleichstand mit den Dorfbewohnern erreicht haben. Bei einer Partie Werw√∂lfe m√ºssen Sie versuchen, die anderen Mitspieler in die Irre zu f√ºhren, um das Spiel gewinnen zu k√∂nnen.\nTipp: Mit **"
						+ prefix + "manual** kannst du die komplette Spielanleitung aufrufen.");

	}

	// ---------ERROR MESSAGES--------------------------------------------

	public static void errorNoAccessToCommand(Game game, MessageChannel messageChannel) {
		messageChannel.createMessage("```diff\n-E: you have no access to this command\n```").block();
	}

	public static void errorWrongSyntaxOnKill(MessageCreateEvent event) {
		event.getMessage().getChannel().block()
				.createMessage("```\nE: Ich verstehe dich nicht üòï\nDein Command sollte so aussehen: \n\"" + prefix
						+ "kill\" <PlayerDerSterbenSoll> <RolleWelchenDenSpielerT√∂tet> \nBeispiel: &kill Anne-Frank Werwolf \nFalls du dir nicht sicher bist, wodurch der Spieler get√∂tet wurde, schreibe \"null\" (Nicht immer ist die der Verantwortliche gemeint, sondern die Rolle, welche zu diesem Tod gef√ºhrt hat z.B. bei Liebe -> Amor)\n```")
				.block();
	}

	public static void errorPlayerNotFound(MessageChannel msgChannel) {
		msgChannel.createMessage(
				"```diff\n-E: Player not found.\nWenn der Spielername ein Leerzeichen enth√§lt, ersetze diesen durch einen Bindestrich (-)\n```")
				.block();
	}

	public static void errorMultiplePlayersNotFound(MessageChannel msgChannel) {
		msgChannel.createMessage(
				"```diff\n-E: One or Multiple Players not found.\nWenn der Spielername ein Leerzeichen enth√§lt, ersetze diesen durch einen Bindestrich (-)\n```")
				.block();
	}

	public static void errorCardNotFound(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: Card not found.\nMit \"" + prefix
				+ "allCards\" kannst du dir eine Liste aller verf√ºgbaren Karten anzeigen lassen\n```").block();
	}

	public static void errorModOnlyCommand(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: Only the moderator can use this command\n```").block();
	}

	public static void errorWWCommandOnly(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: Only the WW can use this command\n```").block();
	}

	public static void errorPlayerAlreadyDead(MessageChannel msgChannel) {
		msgChannel
				.createMessage(
						"```diff\n-E: The Person you Voted for is already dead (Seriously, give him a break)\n```")
				.block();
	}

	public static void errorWrongSyntax(MessageChannel msgChannel) {
		var a = Arrays.asList("```diff\n-E: Wrong Syntax - I can't understand you\n```",
				"```diff\n-E: Wrong Syntax - Use &showCommands for a list of all Commands\n```",
				"```diff\n-E: Wrong Syntax - TIPP: when writing the name of a player, use \"-\" insplace of a space\n```",
				"```diff\n-E: Wrong Syntax - I can't understand you", "E: Wrong Syntax - I can't understand you\n```");
		msgChannel.createMessage(a.get((int) Math.random() * a.size())).block();
	}

	public static void errorWrongAnswer(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: This was not an answer I was expecting. Try again!\n```").block();
	}

	public static void errorNotAllowedToVote(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: You are not allowed to vote!\n```").block();
	}

	public static void errorPlayersIdentical(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E:Two or more Players are identical. Try again.\n```").block();
	}

	public static void errorChoseIdenticalPlayer(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: You cannot choose the same player as last round. Try again.\n```")
				.block();
	}

	public static void errorChoseSelf(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: You cannot choose yourself. Try again.\n```").block();
	}

	public static void errorCommandNotFound(MessageChannel msgChannel) {
		msgChannel.createMessage("```diff\n-E: Command Not Found\n```").block();
	}

	// ---------Need To Sort--------------------------------------------

	public static void confirm(MessageChannel msgChannel) {

		var a = Arrays.asList("Okay", "OK", "Alrighty", "You're the Boss", "Done!", "Good Decision ;)", "Nice!");

		var randMssg = a.get((int) (Math.random() * a.size()));

		Globals.createEmbed(msgChannel, Color.GREEN, randMssg, "");
	}

	public static void voteResultNobody(Game game) {
		Globals.createMessage(game.mainChannel, "Die Dorfbewohner beschlie√üen, dass heute niemand sterben soll.",
				false);
	}

	public static void notifyModGameEnd(PrivateChannel privateChannel, int a) {
		privateChannel.createMessage("**ATTENTION**\n the game has been won by *Winnercode: " + a + "*\n Winnercodes: winner: 1 = Dorfbewohner, 2 = Werw√∂lfe, 3 = Ausgleich\nIf you want to confirm the Game end please use **"+prefix+"endGame <Winnercode>** or use the Command to get to the next DayPhase.").block();
	}

}